jobs:
  build:
    if: (github.event_name == 'pull_request' && github.event.action == 'labeled')
      || github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v2
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      env:
        EVENT: ${{ toJSON(github.event) }}
        EVENT_TYPE: ${{ github.event_name }}
        REF_NAME: ${{ github.ref_name }}
        REF_TYPE: ${{ github.ref_type }}
      id: determine
      name: Configure Build
      uses: actions/github-script@v7
      with:
        script: "const {owner, repo} = context.repo;\nconst event_name = `${process.env.EVENT_TYPE}`;\n\
          const event = JSON.parse(`${process.env.EVENT}`);\nconst ref_type = `${process.env.REF_TYPE}`;\n\
          const ref_name = `${process.env.REF_NAME}`;\nconst result = {\n  action:\
          \ \"build\"\n};\n\nif (event_name === \"push\" && ref_type === \"branch\"\
          ) {\n  const {data: pulls} = await github.rest.pulls.list({ owner, repo,\
          \ head: `${owner}:${ref_name}`, state: \"open\" });\n  const pull = pulls.find((pr)\
          \ => !!pr.labels.find((l) => l.name === \"build-pr-jar\"));\n  if (pull)\
          \ {\n    result[\"pr\"] = pull.number;\n    result[\"action\"] = \"paperclip\"\
          ;\n    core.notice(`This is a push action but to a branch with an open PR\
          \ with the build paperclip label (${JSON.stringify(result)})`);\n    return\
          \ result;\n  }\n} else if (event_name === \"pull_request\" && event.pull_request.labels.find((l)\
          \ => l.name === \"build-pr-jar\")) {\n  result[\"pr\"] = event.pull_request.number;\n\
          \  result[\"action\"] = \"paperclip\";\n  core.notice(`This is a pull request\
          \ action with a build paperclip label (${JSON.stringify(result)})`);\n \
          \ return result;\n}\ncore.notice(\"This will not build a paperclip jar\"\
          );\nreturn result;\n"
    - continue-on-error: true
      name: Apply Patches
      run: 'git config --global user.email "no-reply@github.com"

        git config --global user.name "GitHub Actions"

        ./gradlew applyPatches --stacktrace

        '
    - continue-on-error: true
      name: Build
      run: ./gradlew build --stacktrace
    - continue-on-error: true
      if: always()
      name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: Test Results (${{ matrix.java }})
        path: '**/build/test-results/test/TEST-*.xml

          '
    - continue-on-error: true
      if: fromJSON(steps.determine.outputs.result).action == 'paperclip'
      name: Create Paperclip Jar
      run: ./gradlew createMojmapPaperclipJar --stacktrace
    - continue-on-error: true
      if: fromJSON(steps.determine.outputs.result).action == 'paperclip'
      name: Upload Paperclip Jar
      uses: actions/upload-artifact@v4
      with:
        name: paper-${{ fromJSON(steps.determine.outputs.result).pr }}
        path: build/libs/paper-paperclip-*-mojmap.jar
    strategy:
      fail-fast: true
      matrix:
        java:
        - 21
  event_file:
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name
      }}
    name: Event File
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: Event File
        path: ${{ github.event_path }}
name: Build Paper
on:
  repository_dispatch:
    types: trigger-ga___build.yml
